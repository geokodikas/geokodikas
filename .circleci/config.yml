# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
executorType: machine
environment: &environment
  DO_NOT_COMMIT_CONTAINER: yes
  POSTGIS_LOW_MEM: yes
  # Customize the JVM maximum heap limit
  MAVEN_OPTS: -Xmx3200m

base-pipeline: &base-pipeline
  machine:
    image: ubuntu-1604:201903-01

  working_directory: ~/repo

  steps:
    - attach_workspace:
        # Must be absolute path or relative path from working_directory
        at: ~/repo

    - run:
        name: Run Pipeline
        command: |
          java -jar target/import-pipeline-jar-with-dependencies.jar $COUNTRY
          mkdir -p tmp/exports
          cp tmp/full_import* tmp/exports

    - store_artifacts:
        path: tmp/exports
jobs:
  build-and-test:
    machine:
      image: ubuntu-1604:201903-01

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Package
          command: |
            cp config.dist.json config.json
            cp logback.travis.xml src/main/resources/logback-test.xml
            cp logback.travis.xml src/main/resources/logback.xml
            mvn package -DskipTests

      # run tests!
      - run:
          name: Test
          command: |
            mvn test
            mkdir artifacts
            cp target/*.jar artifacts

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/repo
          paths:
            - target
            - config.json

      - store_artifacts:
          path: ~/repo/artifacts

  belgium-pipeline:
    <<: *base-pipeline
    environment:
      <<: *environment
      COUNTRY: Belgium

  monaco-pipeline:
    <<: *base-pipeline
    environment:
      <<: *environment
      COUNTRY: Monaco

workflows:
  version: 2
  build-and-importers:

    jobs:
      - build-and-test
      - hold:
          type: approval
          requires:
            - build-and-test
      - belgium-pipeline:
          requires:
            - hold
      - monaco-pipeline:
          requires:
            - hold
